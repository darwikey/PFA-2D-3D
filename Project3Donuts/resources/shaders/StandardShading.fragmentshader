varying vec3 varPosition;
varying vec3 varColor;
varying vec3 varNormal;


uniform mat4 modelMatrix;
uniform mat4 viewMatrixInv;
uniform bool isSelected;
uniform bool enableShading;
uniform vec4 lamps[8];


void main() {
	vec3 color = varColor;
	float shininess = 0.5;
	
	if (enableShading){
		vec3 viewDirection = normalize(vec3(viewMatrixInv * vec4(0.0, 0.0, 0.0, 1.0)) - varPosition);
		
		vec3 lampPosition = lamps[0].xyz - varPosition;
		
		vec3 lightDir = normalize(lampPosition);
		
		//****Color****
		// ambient color
		vec3 ambientColor = 0.15 * vec3(1.0, 1.0, 1.0);

		float angle = clamp(dot(varNormal.xyz, lightDir), 0, 1);
		color = color * (angle + ambientColor);
	

		// light source on the right side
		if (dot(varNormal.xyz, lightDir) > 0.0) // light source on the wrong side?
		{
			color += 0.1 * pow(max(0.0, dot(reflect(-lightDir, varNormal.xyz), viewDirection)), shininess);
		}
		
	}
	
	if (!isSelected || (mod(gl_FragCoord.x, 3.) > .5) || (mod(gl_FragCoord.y, 3.) > .5))
		gl_FragColor = vec4(color, 1.0);
	else
		gl_FragColor = vec4(1.0, 0.7, 0.0, 1.0);
}